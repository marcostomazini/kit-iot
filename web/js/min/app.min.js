var app=angular.module("kitIoT",["ngRoute"]);app.config(function($routeProvider){$routeProvider.when("/",{templateUrl:"views/mainView.html",controller:"mainCtrl"}).when("/dashboard",{templateUrl:"views/dashboardView.html",controller:"dashBoardCtrl"}).when("/disconnect",{templateUrl:"views/disconnectView.html",controller:"disconnectCtrl"}).when("/logout",{templateUrl:"views/mainView.html",controller:"logoutCtrl"}).otherwise({redirectTo:"/"})}),app.run(function($rootScope,$location,Auth,socket){$rootScope.$on("$routeChangeStart",function(event,next,current){socket.emit("stop"),Auth.isLoggedIn()&&"views/disconnectView.html"===next.templateUrl?$location.path("/disconnect"):$location.path("/dashboard")}),$rootScope.$on("$routeChangeSuccess",function(){$rootScope.url=$location.path()})}),app.controller("dashBoardCtrl",function($scope,$rootScope,$location,Storage,socket,$http){"use strict";$scope.data={},$scope.msg="Conectando",$scope.connected=!1,$scope.internet=!1,socket.emit("start"),console.log("start"),socket.on("data",function(m){$scope.data=m,$scope.connected=!0,console.log("data received")}),socket.on("button",function(m){$scope.data.button=m}),socket.on("disconnect",function(m){$scope.internet=!1,$scope.msg="Kit desconectado",$scope.connected=!1,$location.path("/disconnect")}),socket.on("logout",function(m){$scope.internet=!1,$scope.connected=!1,$location.path("/logout")}),socket.on("internetConnection",function(m){$scope.internet=!0,$scope.msg=m.msg}),socket.on("no-internetConnection",function(m){$scope.internet=!1,$scope.msg=m.msg})}),app.controller("disconnectCtrl",function($scope){$scope.message="Parece que seu kit não está conectado"}),app.controller("logoutCtrl",function($location,Auth){"use strict";Auth.logout(),$location.path("/")}),app.controller("mainCtrl",function($scope,socket,$http,$location,Storage){"use strict";$scope.loginUser=function(){$scope.loading=!0,$http.post("/login",{name:$scope.name,email:$scope.email,token:$scope.token,pass:$scope.pass,tel:$scope.tel}).success(function(data,status,headers){$scope.loading=!1,data.errors?($scope.errors=data.errors,$scope.mapErrors=data.mapErrors,$scope.error=null):data.error?($scope.errors=$scope.mapErrors=$scope.error=null,"EHOSTUNREACH"===data.error.code?$scope.error={msg:"Sem conexão com a internet"}:$scope.error=data.error):data.exceptionId?($scope.errors=$scope.mapErrors=$scope.error=null,$scope.error={msg:"Erro ao autenticar o token"},$scope.mapErrors={token:"Erro ao autenticar o token"}):($scope.errors=$scope.mapErrors=$scope.error=null,$location.path("/dashboard"))}).error(function(data,status){$scope.loading=!1})}}),app.controller("mapCtrl",function($scope,$rootScope,$location,Storage,$http){"use strict";$scope.dashboard=function(){if(console.log("dashboard"),$rootScope.lonLat){var lonLatShort=$rootScope.lonLat.toShortString();Storage.put("lonLat",lonLatShort),$scope.loading=!0,$http.post("/lonLat",{userProps:Storage.getUserProps(),token:Storage.get("token")}).success(function(data,status){$scope.loading=!1,$location.path("/dashboard")})}}}),app.service("Auth",function($rootScope,Storage,$location){"use strict";this.isLoggedIn=function(){return Storage.get("token")},this.hasLonLat=function(){return Storage.get("lonLat")},this.login=function(token,name,email,tel){$rootScope.name=name,$rootScope.token=token,Storage.put("token",token),Storage.put("name",name),Storage.put("email",email),Storage.put("tel",tel)},this.logout=function(){$rootScope.name=null,$rootScope.token=null,$rootScope.lonLat=null,Storage["delete"]("token"),Storage["delete"]("name"),Storage["delete"]("email"),Storage["delete"]("tel"),Storage["delete"]("lonLat")}}),app.factory("socket",function($rootScope){"use strict";var socket=io.connect();return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})}}}),app.service("Storage",function(){"use strict";this.put=function(name,data){localStorage.setItem(name,data)},this.get=function(name){var name=localStorage.getItem(name);return name?name:""},this["delete"]=function(name){localStorage.removeItem(name)},this.getUserProps=function(){var userProps={UserProps:[{name:"nome",value:this.get("name")},{name:"email",value:this.get("email")},{name:"tel",value:this.get("tel")}]};return this.get("lonLat")&&userProps.UserProps.push({name:"lonLat",value:this.get("lonLat")}),JSON.stringify(userProps)}}),app.directive("map",function($rootScope,Storage){return{restrict:"E",replace:!0,template:'<div class="map"></div>',link:function(scope,element,attrs){var user,map=new OpenLayers.Map(attrs.id),campus=new OpenLayers.Layer.Image("CPBR14","img/cpbr14.png",new OpenLayers.Bounds(0,0,2022,1009),new OpenLayers.Size(1011,505),{numZoomLevels:2}),markers=new OpenLayers.Layer.Markers("Markers"),lonLat=$rootScope.lonLat;map.addLayer(markers),lonLat&&(user=new OpenLayers.Marker(OpenLayers.LonLat.fromString(lonLat)),markers.addMarker(user)),map.events.register("click",map,function(e){lonLat=map.getLonLatFromViewPortPx(e.xy),user&&(markers.removeMarker(user),user.destroy()),user=new OpenLayers.Marker(lonLat),markers.addMarker(user),$rootScope.lonLat=lonLat}),map.addLayers([campus]),map.zoomToMaxExtent()}}});